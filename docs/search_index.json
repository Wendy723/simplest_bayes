[
["dataset-creation-1.html", "4 Dataset Creation 4.1 Generate data for mrgsolve 4.2 Model Details 4.3 Distribution of peak and trough values 4.4 Predicted Profiles 4.5 Real world sampling and LLOQ 4.6 IPRED and DV vs TIME for all individuals at sampled times 4.7 Prepare for nonmem 4.8 Create chains 4.9 output data", " 4 Dataset Creation library(knitr) library(PKPDmisc) library(tidyverse) library(mrgsolve) library(infuser) source(&quot;../scripts/model_details.R&quot;) models &lt;- source(&quot;../models/models.R&quot;)$value #&gt; model dir set to C:/Users/devin/Documents/Repos/simplest_bayes/models #&gt; cache location set to C:\\Users\\devin\\Documents\\Repos\\simplest_bayes\\models\\.modelcache #&gt; Loading model from cache. 4.1 Generate data for mrgsolve start with a baseline of having 50 individuals worth of data, can scale to different amounts of individuals later NIDS &lt;- 56 demogs &lt;- data_frame(ID = 1:NIDS) for_dosing &lt;- demogs %&gt;% mutate( CMT = 1, EVID = 1, TIME = 0, AMT = 1000, RATE = 1000, ADDL = 1, II = 12, OBSNUM = 0 ) one_cmt_iv &lt;- models$use(&quot;one_cmt_iv&quot;) 4.2 Model Details mrgsolve::see(one_cmt_iv) #&gt; #&gt; Model file: one_cmt_iv.cpp #&gt; [PARAM] @annotated #&gt; CL : 3 : Clearance (L/hr) #&gt; V : 35 : Volume (L) #&gt; #&gt; #&gt; [CMT] @annotated #&gt; CENT : Central compartment (mg) #&gt; #&gt; [PKMODEL] #&gt; ncmt=1, trans=11 #&gt; #&gt; [MAIN] #&gt; double CLi = CL*exp(nCL); #&gt; double Vi = V*exp(nV); #&gt; #&gt; #&gt; [OMEGA] @annotated @correlation @block #&gt; nCL : 0.1 : Random effect on CL #&gt; nV : 0.4 0.04 : Random effect on V #&gt; #&gt; [SIGMA] @annotated #&gt; PROP : 0.04 : Proportional error #&gt; // so don&#39;t get into issues with estimating via multiplicative error only #&gt; ADD : 0.1 : Additive residual error #&gt; #&gt; [TABLE] #&gt; double IPRED = CENT/Vi; #&gt; double DV = CENT/Vi*(1+PROP) + ADD; #&gt; #&gt; [CAPTURE] @annotated #&gt; DV : plasma concentration (mg/L) #&gt; IPRED : Individual predicted plasma concentration (mg/L) #&gt; CLi : Individual Clearance (L/hr) #&gt; Vi : Individual Volume (L) one_cmt_iv %&gt;% model_details %&gt;% filter(block != &quot;CAPTURE&quot;) %&gt;% kable() block name descr unit options value PARAM CL Clearance L/hr . 3.00 PARAM V Volume L . 35.00 CMT CENT Central compartment mg . 0.00 OMEGA nCL Random effect on CL . . 0.10 OMEGA nV Random effect on V . . 0.04 SIGMA PROP Proportional error . . 0.04 SIGMA ADD Additive residual error . . 0.10 simulated_data &lt;- one_cmt_iv %&gt;% data_set(for_dosing) %&gt;% mrgsim(end = 36, delta = 0.25) %&gt;% as_data_frame 4.3 Distribution of peak and trough values ‘peak’ defined as 1 hr post infusion and trough 1 hour prior to when next dose would begin simulated_data %&gt;% filter(TIME %in% c(2, 11)) %&gt;% mutate(DV = ifelse(DV &lt; 0, 0, DV)) %&gt;% select(ID, DV) %&gt;% group_by(ID) %&gt;% summarize_all(funs(min, max)) %&gt;% gather(sample, value, -ID) %&gt;% ggplot(aes(x = value)) + geom_density() + facet_wrap(~sample, scales = &quot;free&quot;) + theme_bw() + base_theme() 4.4 Predicted Profiles simulated_data %&gt;% filter(IPRED &gt; 0.1) %&gt;% ggplot(aes(x = TIME, y = IPRED, group = ID)) + geom_line(size = 1.05, alpha = 0.8) + theme_bw() + base_theme() + scale_y_log10(breaks = c(0.1, 1, 10, 20, 30, 40)) 4.5 Real world sampling and LLOQ sample_times_rich &lt;- c(2, 6, 11, 14, 18, 23) LLOQ &lt;- 0.1 sampled_data_rich2d &lt;- simulated_data %&gt;% filter(TIME %in% sample_times_rich, DV &gt; LLOQ) %&gt;% group_by(ID) %&gt;% mutate(OBSNUM = dplyr::row_number(ID)) sparser_scenarios &lt;- list( &quot;s2d&quot; = c(1, 3, 4, 6), &quot;s1dpt&quot; = c(1, 3, 6), &quot;r1d&quot; = c(1, 2, 3), &quot;s2trough&quot; = c(3, 6), &quot;s1d&quot; = c(1, 3), &quot;tr&quot; = c(3) ) sparser_scenario_data &lt;- map(names(sparser_scenarios), function(scenario) { res &lt;- sampled_data_rich2d %&gt;% filter(OBSNUM %in% sparser_scenarios[[scenario]]) return(setNames(res, scenario)) }) 4.6 IPRED and DV vs TIME for all individuals at sampled times list_plots_rich &lt;- simulated_data %&gt;% select(-DV) %&gt;% left_join(sampled_data_rich2d %&gt;% select(ID, TIME, DV)) %&gt;% mutate(PNUM = ids_per_plot(ID)) %&gt;% split(.$PNUM) %&gt;% map(~ ggplot(., aes(x = TIME, y = IPRED, group = ID)) + geom_point(aes(y = DV), color = &quot;blue&quot;) + geom_line(size = 1.05, alpha = 0.8) + theme_bw() + base_theme() + facet_wrap(~ID) + scale_y_log10(breaks = c(0.1, 1, 5, 10, 20, 30, 40)) ) #&gt; Joining, by = c(&quot;ID&quot;, &quot;TIME&quot;) print_plots(list_plots_rich) #&gt; [[1]] #&gt; NULL #&gt; #&gt; [[2]] #&gt; NULL #&gt; #&gt; [[3]] #&gt; NULL #&gt; #&gt; [[4]] #&gt; NULL #&gt; #&gt; [[5]] #&gt; NULL #&gt; #&gt; [[6]] #&gt; NULL #&gt; #&gt; [[7]] #&gt; NULL 4.7 Prepare for nonmem nm_dat_rich &lt;- sampled_data_rich2d %&gt;% select(ID, TIME, DV, OBSNUM) %&gt;% mutate( CMT = 1, EVID = 0 ) %&gt;% bind_rows(for_dosing) %&gt;% arrange(ID, TIME, desc(EVID)) *rich data kable(head(nm_dat_rich, n = 14)) ID TIME DV OBSNUM CMT EVID AMT RATE ADDL II 1 0 NA 0 1 1 1000 1000 1 12 1 2 28.0 1 1 0 NA NA NA NA 1 6 19.7 2 1 0 NA NA NA NA 1 11 14.9 3 1 0 NA NA NA NA 1 14 43.1 4 1 0 NA NA NA NA 1 18 20.7 5 1 0 NA NA NA NA 1 23 10.3 6 1 0 NA NA NA NA 2 0 NA 0 1 1 1000 1000 1 12 2 2 26.1 1 1 0 NA NA NA NA 2 6 28.3 2 1 0 NA NA NA NA 2 11 14.1 3 1 0 NA NA NA NA 2 14 46.5 4 1 0 NA NA NA NA 2 18 34.4 5 1 0 NA NA NA NA 2 23 20.1 6 1 0 NA NA NA NA 4.8 Create chains modt &lt;- read_file(&quot;../modeling/run007c.modt&quot;) BASE_MODEL_NUM &lt;- 7 scenario_df &lt;- as_data_frame( expand.grid(chain = 1:4, scenario = names(sparser_scenarios)) ) %&gt;% arrange(scenario) %&gt;% mutate(scenario_num = BASE_MODEL_NUM + as.numeric(as.factor(scenario))) by_row(scenario_df, function(row) { set.seed(1234567) ignore_obs &lt;- setdiff(1:length(sample_times_rich), sparser_scenarios[[row$scenario]]) ignore &lt;- paste0(&quot;IGNORE=(OBSNUM.EQN.&quot;, ignore_obs, &quot;)&quot;, collapse = &quot; &quot;) write_file( infuse(modt, chain_number = row$chain, seed = round(runif(1, 1000, 100000), 0), ignore = ignore, scenario = row$scenario), file.path(&quot;..&quot;, &quot;modeling&quot;, paste0(&quot;run&quot;, pad_left(row$scenario_num, 3), &quot;c&quot;, row$chain, &quot;.mod&quot;))) }) #&gt; # A tibble: 24 × 4 #&gt; chain scenario scenario_num .out #&gt; &lt;int&gt; &lt;fctr&gt; &lt;dbl&gt; &lt;list&gt; #&gt; 1 1 s2d 8 &lt;S3: character&gt; #&gt; 2 2 s2d 8 &lt;S3: character&gt; #&gt; 3 3 s2d 8 &lt;S3: character&gt; #&gt; 4 4 s2d 8 &lt;S3: character&gt; #&gt; 5 1 s1dpt 9 &lt;S3: character&gt; #&gt; 6 2 s1dpt 9 &lt;S3: character&gt; #&gt; # ... with 18 more rows 4.9 output data write_nonmem(nm_dat_rich, &quot;../modeling/mdata/simple_nocovar_56id_6tp_md.csv&quot;) session_details &lt;- devtools::session_info() session_details$platform #&gt; setting value #&gt; version R version 3.3.2 (2016-10-31) #&gt; system x86_64, mingw32 #&gt; ui RTerm #&gt; language (EN) #&gt; collate English_United States.1252 #&gt; tz America/New_York #&gt; date 2016-12-12 knitr::kable(session_details$packages) package * version date source assertthat 0.1 2013-12-06 CRAN (R 3.3.2) backports 1.0.4 2016-10-24 CRAN (R 3.3.2) bookdown 0.2 2016-11-12 CRAN (R 3.3.2) codetools 0.2-15 2016-10-05 CRAN (R 3.3.2) colorspace 1.2-7 2016-10-11 CRAN (R 3.3.2) DBI 0.5-1 2016-09-10 CRAN (R 3.3.2) devtools 1.12.0 2016-06-24 CRAN (R 3.3.2) digest 0.6.10 2016-08-02 CRAN (R 3.3.2) dplyr * 0.5.0 2016-06-24 CRAN (R 3.3.2) evaluate 0.10 2016-10-11 CRAN (R 3.3.2) ggplot2 * 2.2.0 2016-11-11 CRAN (R 3.3.2) gtable 0.2.0 2016-02-26 CRAN (R 3.3.2) htmltools 0.3.5 2016-03-21 CRAN (R 3.3.2) httpuv 1.3.3 2015-08-04 CRAN (R 3.3.2) infuser * 0.2.5 2016-10-13 CRAN (R 3.3.2) knitr * 1.15 2016-11-09 CRAN (R 3.3.2) lazyeval 0.2.0 2016-06-12 CRAN (R 3.3.2) magrittr 1.5 2014-11-22 CRAN (R 3.3.2) memoise 1.0.0 2016-01-29 CRAN (R 3.3.2) mime 0.5 2016-07-07 CRAN (R 3.3.2) miniUI 0.1.1 2016-01-15 CRAN (R 3.3.2) mrgsolve * 0.7.6.9029 2016-12-06 Github (metrumresearchgroup/mrgsolve@d92f31a) munsell 0.4.3 2016-02-13 CRAN (R 3.3.2) overseer * 0.0.1 2016-12-06 local PKPDmisc * 0.4.4.9000 2016-11-02 Github (dpastoor/PKPDmisc@beae2a6) plyr 1.8.4 2016-06-08 CRAN (R 3.3.2) purrr * 0.2.2 2016-06-18 CRAN (R 3.3.2) R6 2.2.0 2016-10-05 CRAN (R 3.3.2) Rcpp 0.12.8 2016-11-17 CRAN (R 3.3.2) RcppArmadillo 0.7.500.0.0 2016-10-22 CRAN (R 3.3.2) readr * 1.0.0 2016-08-03 CRAN (R 3.3.2) rmarkdown 1.2 2016-11-21 CRAN (R 3.3.2) rprojroot 1.1 2016-10-29 CRAN (R 3.3.2) scales 0.4.1 2016-11-09 CRAN (R 3.3.2) shiny 0.14.2 2016-11-01 CRAN (R 3.3.2) stringi 1.1.2 2016-10-01 CRAN (R 3.3.2) stringr 1.1.0 2016-08-19 CRAN (R 3.3.2) tibble * 1.2 2016-08-26 CRAN (R 3.3.2) tidyr * 0.6.0 2016-08-12 CRAN (R 3.3.2) tidyverse * 1.0.0 2016-09-09 CRAN (R 3.3.2) withr 1.0.2 2016-06-20 CRAN (R 3.3.2) xtable 1.8-2 2016-02-05 CRAN (R 3.3.2) yaml 2.1.13 2014-06-12 CRAN (R 3.3.2) "]
]
